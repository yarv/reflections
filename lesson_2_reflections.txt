What happens when you initialize a repository? 
Why do you need to do it?

When you initialize a repository, you tell git to
set up a directory to be tracked by git. You need
to do so in order for git to properly store version
info.

How is the staging area different from the working
directory and repository? What value do you think
it offers?

The staging area is a subset of your working directory
destined for the next commit. Its useful since you may
only want to commit some of the files in your working
directory.

How can you use the staging area to make sure you have
one commit per logical change?

You can use the staging area along with git diff to
ensure that all that is being committed is one logical
change. 

What are some situations where branches would be
helpful in keeping your history organized? How 
would branches help?

If you'd like to add a new feature to some program,
or you would like to change an existing (working)
feature, branches can help keep you organized and 
maintain the integrity of the original code.

What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?

Merging two branches causes the changes from each
branch tip to be combined into a single branch.
The diagram is the simplest visual representation
of what is going on.

What are the pros and cons of Git's automatic merging
vs. always doing merges manually?

Git's automatic merging means you need to think less 
about the details of combining changes from two authors
or two different subprojects. However this means sometimes
counting on git to know what to do.